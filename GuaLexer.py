# Generated from Gua.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67")
        buf.write("\u0181\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3")
        buf.write("\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13")
        buf.write("\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20")
        buf.write("\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3")
        buf.write("\"\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&")
        buf.write("\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3")
        buf.write("*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3")
        buf.write(",\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3/\3")
        buf.write("/\3/\3/\3/\3\60\5\60\u0117\n\60\3\60\3\60\3\60\3\60\5")
        buf.write("\60\u011d\n\60\3\61\6\61\u0120\n\61\r\61\16\61\u0121\3")
        buf.write("\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\5\62\u012d")
        buf.write("\n\62\3\63\3\63\5\63\u0131\n\63\3\63\3\63\3\63\5\63\u0136")
        buf.write("\n\63\3\63\5\63\u0139\n\63\3\64\3\64\7\64\u013d\n\64\f")
        buf.write("\64\16\64\u0140\13\64\3\65\6\65\u0143\n\65\r\65\16\65")
        buf.write("\u0144\3\66\3\66\6\66\u0149\n\66\r\66\16\66\u014a\3\67")
        buf.write("\3\67\38\68\u0150\n8\r8\168\u0151\39\39\59\u0156\n9\3")
        buf.write(":\3:\3:\3;\5;\u015c\n;\3<\5<\u015f\n<\3=\6=\u0162\n=\r")
        buf.write("=\16=\u0163\3=\3=\3>\3>\3>\5>\u016b\n>\3>\7>\u016e\n>")
        buf.write("\f>\16>\u0171\13>\3>\3>\3>\3>\7>\u0177\n>\f>\16>\u017a")
        buf.write("\13>\3>\3>\5>\u017e\n>\3>\3>\3\u0178\2?\3\3\5\4\7\5\t")
        buf.write("\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60")
        buf.write("_\61a\62c\63e\64g\65i\2k\2m\2o\2q\2s\2u\2w\2y\66{\67\3")
        buf.write("\2\7\3\2\62;\7\2\f\f\17\17$$))^^\n\2$$))^^ddhhppttvv\5")
        buf.write("\2\13\f\17\17\"\"\4\2\f\f\17\17\4\6\2C\2\\\2a\2a\2c\2")
        buf.write("|\2\u0102\2\1\3\7\2\62\2;\2C\2\\\2a\2a\2c\2|\2\u0102\2")
        buf.write("\1\3\u0189\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e")
        buf.write("\3\2\2\2\2g\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5")
        buf.write("\177\3\2\2\2\7\u0081\3\2\2\2\t\u0083\3\2\2\2\13\u0085")
        buf.write("\3\2\2\2\r\u0087\3\2\2\2\17\u0089\3\2\2\2\21\u008b\3\2")
        buf.write("\2\2\23\u008e\3\2\2\2\25\u0091\3\2\2\2\27\u0094\3\2\2")
        buf.write("\2\31\u0097\3\2\2\2\33\u0099\3\2\2\2\35\u009b\3\2\2\2")
        buf.write("\37\u009d\3\2\2\2!\u009f\3\2\2\2#\u00a1\3\2\2\2%\u00a4")
        buf.write("\3\2\2\2\'\u00a7\3\2\2\2)\u00a9\3\2\2\2+\u00ab\3\2\2\2")
        buf.write("-\u00ad\3\2\2\2/\u00af\3\2\2\2\61\u00b1\3\2\2\2\63\u00b4")
        buf.write("\3\2\2\2\65\u00b7\3\2\2\2\67\u00ba\3\2\2\29\u00bd\3\2")
        buf.write("\2\2;\u00c1\3\2\2\2=\u00c4\3\2\2\2?\u00c6\3\2\2\2A\u00c8")
        buf.write("\3\2\2\2C\u00ca\3\2\2\2E\u00cc\3\2\2\2G\u00d0\3\2\2\2")
        buf.write("I\u00d4\3\2\2\2K\u00d9\3\2\2\2M\u00df\3\2\2\2O\u00e2\3")
        buf.write("\2\2\2Q\u00e7\3\2\2\2S\u00ed\3\2\2\2U\u00f1\3\2\2\2W\u00f7")
        buf.write("\3\2\2\2Y\u0100\3\2\2\2[\u0109\3\2\2\2]\u0110\3\2\2\2")
        buf.write("_\u011c\3\2\2\2a\u011f\3\2\2\2c\u012c\3\2\2\2e\u0138\3")
        buf.write("\2\2\2g\u013a\3\2\2\2i\u0142\3\2\2\2k\u0146\3\2\2\2m\u014c")
        buf.write("\3\2\2\2o\u014f\3\2\2\2q\u0155\3\2\2\2s\u0157\3\2\2\2")
        buf.write("u\u015b\3\2\2\2w\u015e\3\2\2\2y\u0161\3\2\2\2{\u017d\3")
        buf.write("\2\2\2}~\7?\2\2~\4\3\2\2\2\177\u0080\7\60\2\2\u0080\6")
        buf.write("\3\2\2\2\u0081\u0082\7*\2\2\u0082\b\3\2\2\2\u0083\u0084")
        buf.write("\7+\2\2\u0084\n\3\2\2\2\u0085\u0086\7}\2\2\u0086\f\3\2")
        buf.write("\2\2\u0087\u0088\7\177\2\2\u0088\16\3\2\2\2\u0089\u008a")
        buf.write("\7=\2\2\u008a\20\3\2\2\2\u008b\u008c\7-\2\2\u008c\u008d")
        buf.write("\7?\2\2\u008d\22\3\2\2\2\u008e\u008f\7/\2\2\u008f\u0090")
        buf.write("\7?\2\2\u0090\24\3\2\2\2\u0091\u0092\7,\2\2\u0092\u0093")
        buf.write("\7?\2\2\u0093\26\3\2\2\2\u0094\u0095\7\61\2\2\u0095\u0096")
        buf.write("\7?\2\2\u0096\30\3\2\2\2\u0097\u0098\7,\2\2\u0098\32\3")
        buf.write("\2\2\2\u0099\u009a\7\61\2\2\u009a\34\3\2\2\2\u009b\u009c")
        buf.write("\7\'\2\2\u009c\36\3\2\2\2\u009d\u009e\7-\2\2\u009e \3")
        buf.write("\2\2\2\u009f\u00a0\7/\2\2\u00a0\"\3\2\2\2\u00a1\u00a2")
        buf.write("\7>\2\2\u00a2\u00a3\7>\2\2\u00a3$\3\2\2\2\u00a4\u00a5")
        buf.write("\7@\2\2\u00a5\u00a6\7@\2\2\u00a6&\3\2\2\2\u00a7\u00a8")
        buf.write("\7(\2\2\u00a8(\3\2\2\2\u00a9\u00aa\7\u0080\2\2\u00aa*")
        buf.write("\3\2\2\2\u00ab\u00ac\7~\2\2\u00ac,\3\2\2\2\u00ad\u00ae")
        buf.write("\7>\2\2\u00ae.\3\2\2\2\u00af\u00b0\7@\2\2\u00b0\60\3\2")
        buf.write("\2\2\u00b1\u00b2\7>\2\2\u00b2\u00b3\7?\2\2\u00b3\62\3")
        buf.write("\2\2\2\u00b4\u00b5\7@\2\2\u00b5\u00b6\7?\2\2\u00b6\64")
        buf.write("\3\2\2\2\u00b7\u00b8\7?\2\2\u00b8\u00b9\7?\2\2\u00b9\66")
        buf.write("\3\2\2\2\u00ba\u00bb\7#\2\2\u00bb\u00bc\7?\2\2\u00bc8")
        buf.write("\3\2\2\2\u00bd\u00be\7c\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0")
        buf.write("\7f\2\2\u00c0:\3\2\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3")
        buf.write("\7t\2\2\u00c3<\3\2\2\2\u00c4\u00c5\7]\2\2\u00c5>\3\2\2")
        buf.write("\2\u00c6\u00c7\7.\2\2\u00c7@\3\2\2\2\u00c8\u00c9\7_\2")
        buf.write("\2\u00c9B\3\2\2\2\u00ca\u00cb\7<\2\2\u00cbD\3\2\2\2\u00cc")
        buf.write("\u00cd\7x\2\2\u00cd\u00ce\7c\2\2\u00ce\u00cf\7t\2\2\u00cf")
        buf.write("F\3\2\2\2\u00d0\u00d1\7e\2\2\u00d1\u00d2\7q\2\2\u00d2")
        buf.write("\u00d3\7p\2\2\u00d3H\3\2\2\2\u00d4\u00d5\7v\2\2\u00d5")
        buf.write("\u00d6\7j\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7u\2\2\u00d8")
        buf.write("J\3\2\2\2\u00d9\u00da\7e\2\2\u00da\u00db\7n\2\2\u00db")
        buf.write("\u00dc\7c\2\2\u00dc\u00dd\7u\2\2\u00dd\u00de\7u\2\2\u00de")
        buf.write("L\3\2\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1\7h\2\2\u00e1")
        buf.write("N\3\2\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7n\2\2\u00e4")
        buf.write("\u00e5\7u\2\2\u00e5\u00e6\7g\2\2\u00e6P\3\2\2\2\u00e7")
        buf.write("\u00e8\7y\2\2\u00e8\u00e9\7j\2\2\u00e9\u00ea\7k\2\2\u00ea")
        buf.write("\u00eb\7n\2\2\u00eb\u00ec\7g\2\2\u00ecR\3\2\2\2\u00ed")
        buf.write("\u00ee\7h\2\2\u00ee\u00ef\7q\2\2\u00ef\u00f0\7t\2\2\u00f0")
        buf.write("T\3\2\2\2\u00f1\u00f2\7d\2\2\u00f2\u00f3\7t\2\2\u00f3")
        buf.write("\u00f4\7g\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7m\2\2\u00f6")
        buf.write("V\3\2\2\2\u00f7\u00f8\7e\2\2\u00f8\u00f9\7q\2\2\u00f9")
        buf.write("\u00fa\7p\2\2\u00fa\u00fb\7v\2\2\u00fb\u00fc\7k\2\2\u00fc")
        buf.write("\u00fd\7p\2\2\u00fd\u00fe\7w\2\2\u00fe\u00ff\7g\2\2\u00ff")
        buf.write("X\3\2\2\2\u0100\u0101\7h\2\2\u0101\u0102\7w\2\2\u0102")
        buf.write("\u0103\7p\2\2\u0103\u0104\7e\2\2\u0104\u0105\7v\2\2\u0105")
        buf.write("\u0106\7k\2\2\u0106\u0107\7q\2\2\u0107\u0108\7p\2\2\u0108")
        buf.write("Z\3\2\2\2\u0109\u010a\7t\2\2\u010a\u010b\7g\2\2\u010b")
        buf.write("\u010c\7v\2\2\u010c\u010d\7w\2\2\u010d\u010e\7t\2\2\u010e")
        buf.write("\u010f\7p\2\2\u010f\\\3\2\2\2\u0110\u0111\7p\2\2\u0111")
        buf.write("\u0112\7w\2\2\u0112\u0113\7n\2\2\u0113\u0114\7n\2\2\u0114")
        buf.write("^\3\2\2\2\u0115\u0117\5i\65\2\u0116\u0115\3\2\2\2\u0116")
        buf.write("\u0117\3\2\2\2\u0117\u0118\3\2\2\2\u0118\u011d\5k\66\2")
        buf.write("\u0119\u011a\5i\65\2\u011a\u011b\7\60\2\2\u011b\u011d")
        buf.write("\3\2\2\2\u011c\u0116\3\2\2\2\u011c\u0119\3\2\2\2\u011d")
        buf.write("`\3\2\2\2\u011e\u0120\5m\67\2\u011f\u011e\3\2\2\2\u0120")
        buf.write("\u0121\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122\3\2\2\2")
        buf.write("\u0122b\3\2\2\2\u0123\u0124\7v\2\2\u0124\u0125\7t\2\2")
        buf.write("\u0125\u0126\7w\2\2\u0126\u012d\7g\2\2\u0127\u0128\7h")
        buf.write("\2\2\u0128\u0129\7c\2\2\u0129\u012a\7n\2\2\u012a\u012b")
        buf.write("\7u\2\2\u012b\u012d\7g\2\2\u012c\u0123\3\2\2\2\u012c\u0127")
        buf.write("\3\2\2\2\u012dd\3\2\2\2\u012e\u0130\7$\2\2\u012f\u0131")
        buf.write("\5o8\2\u0130\u012f\3\2\2\2\u0130\u0131\3\2\2\2\u0131\u0132")
        buf.write("\3\2\2\2\u0132\u0139\7$\2\2\u0133\u0135\7)\2\2\u0134\u0136")
        buf.write("\5o8\2\u0135\u0134\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0137")
        buf.write("\3\2\2\2\u0137\u0139\7)\2\2\u0138\u012e\3\2\2\2\u0138")
        buf.write("\u0133\3\2\2\2\u0139f\3\2\2\2\u013a\u013e\5u;\2\u013b")
        buf.write("\u013d\5w<\2\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e")
        buf.write("\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013fh\3\2\2\2\u0140")
        buf.write("\u013e\3\2\2\2\u0141\u0143\5m\67\2\u0142\u0141\3\2\2\2")
        buf.write("\u0143\u0144\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3")
        buf.write("\2\2\2\u0145j\3\2\2\2\u0146\u0148\7\60\2\2\u0147\u0149")
        buf.write("\5m\67\2\u0148\u0147\3\2\2\2\u0149\u014a\3\2\2\2\u014a")
        buf.write("\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014bl\3\2\2\2\u014c")
        buf.write("\u014d\t\2\2\2\u014dn\3\2\2\2\u014e\u0150\5q9\2\u014f")
        buf.write("\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u014f\3\2\2\2")
        buf.write("\u0151\u0152\3\2\2\2\u0152p\3\2\2\2\u0153\u0156\n\3\2")
        buf.write("\2\u0154\u0156\5s:\2\u0155\u0153\3\2\2\2\u0155\u0154\3")
        buf.write("\2\2\2\u0156r\3\2\2\2\u0157\u0158\7^\2\2\u0158\u0159\t")
        buf.write("\4\2\2\u0159t\3\2\2\2\u015a\u015c\t\7\2\2\u015b\u015a")
        buf.write("\3\2\2\2\u015cv\3\2\2\2\u015d\u015f\t\b\2\2\u015e\u015d")
        buf.write("\3\2\2\2\u015fx\3\2\2\2\u0160\u0162\t\5\2\2\u0161\u0160")
        buf.write("\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0161\3\2\2\2\u0163")
        buf.write("\u0164\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0166\b=\2\2")
        buf.write("\u0166z\3\2\2\2\u0167\u0168\7\61\2\2\u0168\u016b\7\61")
        buf.write("\2\2\u0169\u016b\7%\2\2\u016a\u0167\3\2\2\2\u016a\u0169")
        buf.write("\3\2\2\2\u016b\u016f\3\2\2\2\u016c\u016e\n\6\2\2\u016d")
        buf.write("\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f\u016d\3\2\2\2")
        buf.write("\u016f\u0170\3\2\2\2\u0170\u017e\3\2\2\2\u0171\u016f\3")
        buf.write("\2\2\2\u0172\u0173\7\61\2\2\u0173\u0174\7,\2\2\u0174\u0178")
        buf.write("\3\2\2\2\u0175\u0177\13\2\2\2\u0176\u0175\3\2\2\2\u0177")
        buf.write("\u017a\3\2\2\2\u0178\u0179\3\2\2\2\u0178\u0176\3\2\2\2")
        buf.write("\u0179\u017b\3\2\2\2\u017a\u0178\3\2\2\2\u017b\u017c\7")
        buf.write(",\2\2\u017c\u017e\7\61\2\2\u017d\u016a\3\2\2\2\u017d\u0172")
        buf.write("\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0180\b>\2\2\u0180")
        buf.write("|\3\2\2\2\26\2\u0116\u011c\u0121\u012c\u0130\u0135\u0138")
        buf.write("\u013e\u0144\u014a\u0151\u0155\u015b\u015e\u0163\u016a")
        buf.write("\u016f\u0178\u017d\3\b\2\2")
        return buf.getvalue()


class GuaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    VAR = 34
    CON = 35
    THIS = 36
    CLASS = 37
    IF = 38
    ELSE = 39
    WHILE = 40
    FOR = 41
    BREAK = 42
    CONTINUE = 43
    FUNCTION = 44
    RETURN = 45
    NULL = 46
    FLOAT = 47
    INT = 48
    BOOL = 49
    STRING = 50
    IDENTIFIER = 51
    SPACE = 52
    COMMENT = 53

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'.'", "'('", "')'", "'{'", "'}'", "';'", "'+='", "'-='", 
            "'*='", "'/='", "'*'", "'/'", "'%'", "'+'", "'-'", "'<<'", "'>>'", 
            "'&'", "'~'", "'|'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", 
            "'and'", "'or'", "'['", "','", "']'", "':'", "'var'", "'con'", 
            "'this'", "'class'", "'if'", "'else'", "'while'", "'for'", "'break'", 
            "'continue'", "'function'", "'return'", "'null'" ]

    symbolicNames = [ "<INVALID>",
            "VAR", "CON", "THIS", "CLASS", "IF", "ELSE", "WHILE", "FOR", 
            "BREAK", "CONTINUE", "FUNCTION", "RETURN", "NULL", "FLOAT", 
            "INT", "BOOL", "STRING", "IDENTIFIER", "SPACE", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "VAR", "CON", "THIS", "CLASS", "IF", "ELSE", 
                  "WHILE", "FOR", "BREAK", "CONTINUE", "FUNCTION", "RETURN", 
                  "NULL", "FLOAT", "INT", "BOOL", "STRING", "IDENTIFIER", 
                  "IntPart", "Fraction", "Digit", "StringCharacters", "StringCharacter", 
                  "EscapeSequence", "Letter", "LetterOrDigit", "SPACE", 
                  "COMMENT" ]

    grammarFileName = "Gua.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


